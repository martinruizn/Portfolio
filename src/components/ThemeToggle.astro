---
const label = 'Toggle theme';
---

<button
  data-theme-toggle
  class="inline-flex items-center"
  aria-label={label}
  aria-pressed="false"
>
  <span
    data-switch
    class="relative inline-flex h-5 w-10 items-center rounded-full transition-colors bg-neutral-300 dark:bg-neutral-700 data-[state=on]:bg-brand"
  >
    <span
      data-icon="sun"
      class="pointer-events-none absolute left-1 top-1/2 -translate-y-1/2 text-[10px] leading-none opacity-40 data-[active=true]:opacity-100 filter brightness-0 dark:invert"
      >☀️</span
    >
    <span
      data-icon="moon"
      class="pointer-events-none absolute right-1 top-1/2 -translate-y-1/2 text-[10px] leading-none opacity-40 data-[active=true]:opacity-100 filter brightness-0 dark:invert"
      >🌙</span
    >
    <span
      data-thumb
      class="relative z-[1] ml-0.5 inline-block h-4 w-4 rounded-full bg-white shadow ring-1 ring-black/10 transition-transform translate-x-0 data-[state=on]:translate-x-5"
    ></span>
  </span>
</button>

<script>
  const root = document.documentElement;
  const btn = document.querySelector('[data-theme-toggle]');
  const track = btn?.querySelector('[data-switch]');
  const thumb = btn?.querySelector('[data-thumb]');
  const sun = btn?.querySelector('[data-icon="sun"]');
  const moon = btn?.querySelector('[data-icon="moon"]');

  function updateUI() {
    const isDark = root.classList.contains('dark');
    btn?.setAttribute('aria-pressed', String(isDark));
    const state = isDark ? 'on' : 'off';
    track?.setAttribute('data-state', state);
    thumb?.setAttribute('data-state', state);
    sun?.setAttribute('data-active', String(!isDark));
    moon?.setAttribute('data-active', String(isDark));
  }

  function applyTheme(next) {
    root.classList.toggle('dark', next === 'dark');
    try {
      localStorage.setItem('theme', next);
    } catch {}
    updateUI();
  }

  // Initialize from storage if present
  try {
    const stored = localStorage.getItem('theme');
    if (stored === 'dark' || stored === 'light') {
      root.classList.toggle('dark', stored === 'dark');
    }
  } catch {}
  updateUI();

  // Click handler
  btn?.addEventListener('click', () => {
    const next = root.classList.contains('dark') ? 'light' : 'dark';
    applyTheme(next);
    updateUI();
  });
</script>

---
const {
  title,
  teaser,
  year,
  tags = [],
  href,
  avatar,
  stars,
} = Astro.props as {
  title: string;
  teaser?: string;
  year?: number;
  tags?: string[];
  href: string;
  avatar?: string;
  stars?: number;
};
const isExternal = href.startsWith('http');
---

<a href={href} class="card block p-5" target={isExternal ? '_blank' : undefined} rel={isExternal ? 'noopener noreferrer' : undefined}>
  <div class="flex items-start justify-between gap-4">
    <div class="min-w-0">
      <div class="flex items-center gap-3">
        {avatar && (
          <img src={avatar} alt="Avatar del repositorio" width="28" height="28" class="h-7 w-7 rounded-full" loading="lazy" />
        )}
        <h3 class="truncate text-lg font-semibold">{title}</h3>
      </div>
      {
        teaser && (
          <p class="mt-1 text-sm text-neutral-600 dark:text-neutral-300">
            {teaser}
          </p>
        )
      }
      {
        tags.length > 0 && (
          <ul class="mt-3 flex flex-wrap gap-2 text-xs text-neutral-600 dark:text-neutral-300">
            {tags.map((t) => (
              <li class="rounded bg-neutral-100 px-2 py-1 dark:bg-neutral-800">
                {t}
              </li>
            ))}
          </ul>
        )
      }
    </div>
    {
      typeof year === 'number' && (
        <span class="shrink-0 text-sm text-neutral-500">{year}</span>
      )
    }
  </div>
  {typeof stars === 'number' && (
    <div class="mt-3 text-xs text-neutral-600 dark:text-neutral-300">
      â˜… {stars}
    </div>
  )}
</a>
